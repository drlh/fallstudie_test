package de.spiel.GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import de.spiel.Spiel;
import de.spiel.finanzen.Snapshot;
import de.spiel.unternehmen.Unternehmen;
import de.spiel.unternehmen.abteilung.Einkauf;
import de.spiel.unternehmen.mitarbeiter.Mitarbeiter;
import de.spiel.unternehmen.mitarbeiter.Produktionsmitarbeiter;
import de.spiel.unternehmen.mitarbeiter.Vertrieb;

/**
 * 
 * @author PR050736
 */
public class RundenView extends javax.swing.JFrame implements
		ListSelectionListener, ActionListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form RundenView
	 */
	public RundenView() {
		initComponents();
		tableEinkaufProd.getSelectionModel().addListSelectionListener(this);
		tableVerkaufProd.getSelectionModel().addListSelectionListener(this);
		btnEinkaufBeschaffungVornehmen.addActionListener(this);

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		toolbarSpieler = new javax.swing.JToolBar();
		btnRundeBeenden = new javax.swing.JButton();
		panInhalt = new javax.swing.JPanel();
		tabsMain = new javax.swing.JTabbedPane();
		tabUebersicht = new javax.swing.JPanel();
		scrlUebersichtBilanz = new javax.swing.JScrollPane();
		tableUebersichtBilanz = new javax.swing.JTable();
		tabMitarbeiter = new javax.swing.JPanel();
		tabsMitarbeiter = new javax.swing.JTabbedPane();
		tabMitEinkauf = new javax.swing.JPanel();
		panTabMitEinkaufButtons = new javax.swing.JPanel();
		btnEinkaufEinstellen = new javax.swing.JButton();
		btnEinkaufEntlassen = new javax.swing.JButton();
		scrlEinkaufMitarbeiter = new javax.swing.JScrollPane();
		tableEinkaufMitarbeiter = new javax.swing.JTable();
		tabMitVerkauf = new javax.swing.JPanel();
		panTabMitVerkaufButtons = new javax.swing.JPanel();
		btnVerkaufEinstellen = new javax.swing.JButton();
		btnVerkaufEntlassen = new javax.swing.JButton();
		scrlVerkaufMitarbeiter = new javax.swing.JScrollPane();
		tableVerkaufMitarbeiter = new javax.swing.JTable();
		tabMitProduktion = new javax.swing.JPanel();
		panTabMitProduktionButtons = new javax.swing.JPanel();
		btnProduktionEinstellen = new javax.swing.JButton();
		btnProduktionEntlassen1 = new javax.swing.JButton();
		scrlProduktionMitarbeiter = new javax.swing.JScrollPane();
		tableProduktionMitarbeiter = new javax.swing.JTable();
		tabEinkauf = new javax.swing.JPanel();
		panEinkaufBeschaffung = new javax.swing.JPanel();
		lblEinkaufProdukt_beschriftung = new javax.swing.JLabel();
		lblEinkaufMenge_beschriftung = new javax.swing.JLabel();
		btnEinkaufBeschaffungVornehmen = new javax.swing.JButton();
		txtEinkaufMenge = new javax.swing.JTextField();
		lblEinkaufGesamtPreis_beschriftung = new javax.swing.JLabel();
		lblEinkaufProdukt = new javax.swing.JLabel();
		lvlEinkaufGesamtpreis = new javax.swing.JLabel();
		scrlEinkauf = new javax.swing.JScrollPane();
		tableEinkaufProd = new javax.swing.JTable();
		tabVerkauf = new javax.swing.JPanel();
		panVerkaufAngebot = new javax.swing.JPanel();
		lblVerkaufProdukt_beschriftung = new javax.swing.JLabel();
		lblVerkaufMenge_beschriftung = new javax.swing.JLabel();
		btnVerkaufAngebotAbgeben = new javax.swing.JButton();
		txtVerkaufMenge = new javax.swing.JTextField();
		lblVerkaufStueckpreis_beschriftung = new javax.swing.JLabel();
		txtVerkaufStueckpreis = new javax.swing.JTextField();
		lblVerkaufGesamtpreis_Beschriftung = new javax.swing.JLabel();
		lblVerkaufProdukt = new javax.swing.JLabel();
		lblVerkaufGesamtpreis = new javax.swing.JLabel();
		scrlVerkauf = new javax.swing.JScrollPane();
		tableVerkaufProd = new javax.swing.JTable();
		tabLager = new javax.swing.JPanel();
		splitLager = new javax.swing.JSplitPane();
		scrlLagerRohstoffe = new javax.swing.JScrollPane();
		tableLagerRohstoffe = new javax.swing.JTable();
		scrlLagerFE = new javax.swing.JScrollPane();
		tableLagerFE = new javax.swing.JTable();
		tabProduktion = new javax.swing.JPanel();
		tabsProduktion = new javax.swing.JTabbedPane();
		tabProduktionMaschine = new javax.swing.JPanel();
		panProduktionMaschineButtons = new javax.swing.JPanel();
		btnMaschineVerkaufen = new javax.swing.JButton();
		btnMaschineAnschaffen = new javax.swing.JButton();
		scrlProduktionMaschine = new javax.swing.JScrollPane();
		tableProduktionMaschinen = new javax.swing.JTable();
		Produzieren = new javax.swing.JPanel();
		panProduktionProduktionBorder = new javax.swing.JPanel();
		lblProduktionMaschine_beschriftung = new javax.swing.JLabel();
		lblProduktionRohstoff_beschriftung = new javax.swing.JLabel();
		lblProduzierenMengeneinsatz_beschriftung = new javax.swing.JLabel();
		comboProduzierenMaschine = new javax.swing.JComboBox();
		comboProduzierenRohstoff = new javax.swing.JComboBox();
		txtProduzierenMengeneinsatz = new javax.swing.JTextField();
		btnProduzieren = new javax.swing.JButton();
		menubar = new javax.swing.JMenuBar();
		menuSpiel = new javax.swing.JMenu();
		beendenItem = new javax.swing.JMenuItem();
		menuHilfe = new javax.swing.JMenu();
		ueberItem = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowOpened(java.awt.event.WindowEvent evt) {
				formWindowOpened(evt);
			}
		});

		toolbarSpieler.setRollover(true);

		btnRundeBeenden.setText("Runde Beenden");
		btnRundeBeenden.setFocusable(false);
		btnRundeBeenden
				.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		btnRundeBeenden
				.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
		toolbarSpieler.add(btnRundeBeenden);

		getContentPane().add(toolbarSpieler, java.awt.BorderLayout.NORTH);

		panInhalt.setLayout(new java.awt.BorderLayout());

		tabsMain.setTabPlacement(javax.swing.JTabbedPane.LEFT);

		tabUebersicht.setLayout(new java.awt.BorderLayout());

		tableUebersichtBilanz.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] { "A", "", "", "P" }) {
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class };
			boolean[] canEdit = new boolean[] { false, false, false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		scrlUebersichtBilanz.setViewportView(tableUebersichtBilanz);

		tabUebersicht.add(scrlUebersichtBilanz, java.awt.BorderLayout.CENTER);

		tabsMain.addTab("Übersicht", tabUebersicht);

		tabMitarbeiter.setLayout(new java.awt.BorderLayout());

		tabMitEinkauf.setLayout(new java.awt.BorderLayout());

		btnEinkaufEinstellen.setText("Einstellen");

		btnEinkaufEntlassen.setText("Entlassen");

		org.jdesktop.layout.GroupLayout panTabMitEinkaufButtonsLayout = new org.jdesktop.layout.GroupLayout(
				panTabMitEinkaufButtons);
		panTabMitEinkaufButtons.setLayout(panTabMitEinkaufButtonsLayout);
		panTabMitEinkaufButtonsLayout
				.setHorizontalGroup(panTabMitEinkaufButtonsLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panTabMitEinkaufButtonsLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(panTabMitEinkaufButtonsLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(btnEinkaufEinstellen)
										.add(btnEinkaufEntlassen))
								.addContainerGap(17, Short.MAX_VALUE)));
		panTabMitEinkaufButtonsLayout
				.setVerticalGroup(panTabMitEinkaufButtonsLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panTabMitEinkaufButtonsLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(btnEinkaufEinstellen)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(btnEinkaufEntlassen)
								.addContainerGap(471, Short.MAX_VALUE)));

		tabMitEinkauf.add(panTabMitEinkaufButtons,
				java.awt.BorderLayout.LINE_END);

		tableEinkaufMitarbeiter
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] {

						}, new String[] { "Name", "Typ", "Stufe" }));
		scrlEinkaufMitarbeiter.setViewportView(tableEinkaufMitarbeiter);

		tabMitEinkauf.add(scrlEinkaufMitarbeiter, java.awt.BorderLayout.CENTER);

		tabsMitarbeiter.addTab("Einkauf", tabMitEinkauf);

		tabMitVerkauf.setLayout(new java.awt.BorderLayout());

		btnVerkaufEinstellen.setText("Einstellen");

		btnVerkaufEntlassen.setText("Entlassen");

		org.jdesktop.layout.GroupLayout panTabMitVerkaufButtonsLayout = new org.jdesktop.layout.GroupLayout(
				panTabMitVerkaufButtons);
		panTabMitVerkaufButtons.setLayout(panTabMitVerkaufButtonsLayout);
		panTabMitVerkaufButtonsLayout
				.setHorizontalGroup(panTabMitVerkaufButtonsLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panTabMitVerkaufButtonsLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(panTabMitVerkaufButtonsLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(btnVerkaufEinstellen)
										.add(btnVerkaufEntlassen))
								.addContainerGap(17, Short.MAX_VALUE)));
		panTabMitVerkaufButtonsLayout
				.setVerticalGroup(panTabMitVerkaufButtonsLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panTabMitVerkaufButtonsLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(btnVerkaufEinstellen)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(btnVerkaufEntlassen)
								.addContainerGap(471, Short.MAX_VALUE)));

		tabMitVerkauf.add(panTabMitVerkaufButtons,
				java.awt.BorderLayout.LINE_END);

		tableVerkaufMitarbeiter
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] {

						}, new String[] { "Name", "Typ", "Stufe" }));
		scrlVerkaufMitarbeiter.setViewportView(tableVerkaufMitarbeiter);

		tabMitVerkauf.add(scrlVerkaufMitarbeiter, java.awt.BorderLayout.CENTER);

		tabsMitarbeiter.addTab("Verkauf", tabMitVerkauf);

		tabMitProduktion.setLayout(new java.awt.BorderLayout());

		btnProduktionEinstellen.setText("Einstellen");

		btnProduktionEntlassen1.setText("Entlassen");

		org.jdesktop.layout.GroupLayout panTabMitProduktionButtonsLayout = new org.jdesktop.layout.GroupLayout(
				panTabMitProduktionButtons);
		panTabMitProduktionButtons.setLayout(panTabMitProduktionButtonsLayout);
		panTabMitProduktionButtonsLayout
				.setHorizontalGroup(panTabMitProduktionButtonsLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panTabMitProduktionButtonsLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(panTabMitProduktionButtonsLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(btnProduktionEinstellen)
										.add(btnProduktionEntlassen1))
								.addContainerGap(17, Short.MAX_VALUE)));
		panTabMitProduktionButtonsLayout
				.setVerticalGroup(panTabMitProduktionButtonsLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panTabMitProduktionButtonsLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(btnProduktionEinstellen)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(btnProduktionEntlassen1)
								.addContainerGap(471, Short.MAX_VALUE)));

		tabMitProduktion.add(panTabMitProduktionButtons,
				java.awt.BorderLayout.LINE_END);

		tableProduktionMitarbeiter
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] {

						}, new String[] { "Name", "Typ", "Stufe" }));
		scrlProduktionMitarbeiter.setViewportView(tableProduktionMitarbeiter);

		tabMitProduktion.add(scrlProduktionMitarbeiter,
				java.awt.BorderLayout.CENTER);

		tabsMitarbeiter.addTab("Produktion", tabMitProduktion);

		tabMitarbeiter.add(tabsMitarbeiter, java.awt.BorderLayout.CENTER);

		tabsMain.addTab("Mitarbeiter", tabMitarbeiter);

		tabEinkauf.setLayout(new java.awt.BorderLayout());

		panEinkaufBeschaffung.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Beschaffung"));

		lblEinkaufProdukt_beschriftung.setText("Produkt:");

		lblEinkaufMenge_beschriftung.setText("Menge:");

		btnEinkaufBeschaffungVornehmen.setText("Beschaffung vornehmen");
		btnEinkaufBeschaffungVornehmen.setActionCommand("Beschaffen");

		txtEinkaufMenge.setText("100");
		txtEinkaufMenge.setMinimumSize(new java.awt.Dimension(40, 20));

		lblEinkaufGesamtPreis_beschriftung.setText("Gesamtpreis:");

		org.jdesktop.layout.GroupLayout panEinkaufBeschaffungLayout = new org.jdesktop.layout.GroupLayout(
				panEinkaufBeschaffung);
		panEinkaufBeschaffung.setLayout(panEinkaufBeschaffungLayout);
		panEinkaufBeschaffungLayout
				.setHorizontalGroup(panEinkaufBeschaffungLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panEinkaufBeschaffungLayout
								.createSequentialGroup().add(104, 104, 104)
								.add(lblEinkaufProdukt_beschriftung))
						.add(panEinkaufBeschaffungLayout
								.createSequentialGroup()
								.add(114, 114, 114)
								.add(lblEinkaufMenge_beschriftung)
								.add(4, 4, 4)
								.add(txtEinkaufMenge,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										30,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
						.add(panEinkaufBeschaffungLayout
								.createSequentialGroup().add(84, 84, 84)
								.add(lblEinkaufGesamtPreis_beschriftung))
						.add(panEinkaufBeschaffungLayout
								.createSequentialGroup().add(4, 4, 4)
								.add(btnEinkaufBeschaffungVornehmen)));
		panEinkaufBeschaffungLayout
				.setVerticalGroup(panEinkaufBeschaffungLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panEinkaufBeschaffungLayout
								.createSequentialGroup()
								.add(14, 14, 14)
								.add(lblEinkaufProdukt_beschriftung)
								.add(6, 6, 6)
								.add(panEinkaufBeschaffungLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(lblEinkaufMenge_beschriftung)
										.add(txtEinkaufMenge,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
								.add(lblEinkaufGesamtPreis_beschriftung)
								.add(6, 6, 6)
								.add(btnEinkaufBeschaffungVornehmen)));

		tabEinkauf.add(panEinkaufBeschaffung, java.awt.BorderLayout.PAGE_END);

		tableEinkaufProd.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { "Boskoop", new Double(1.0), "kg" },
						{ "Kaiser Willhelm", new Double(1.0), "kg" } },
				new String[] { "Produktbezeichnung", "Preis in /ME", "ME" }) {
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.Double.class, java.lang.Object.class };
			boolean[] canEdit = new boolean[] { false, false, true };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		tableEinkaufProd.setCursor(new java.awt.Cursor(
				java.awt.Cursor.HAND_CURSOR));
		scrlEinkauf.setViewportView(tableEinkaufProd);

		tabEinkauf.add(scrlEinkauf, java.awt.BorderLayout.CENTER);

		tabsMain.addTab("Einkauf", tabEinkauf);

		tabVerkauf.setLayout(new java.awt.BorderLayout());

		panVerkaufAngebot.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Angebot"));

		lblVerkaufProdukt_beschriftung.setText("Produkt:");

		lblVerkaufMenge_beschriftung.setText("Menge:");

		btnVerkaufAngebotAbgeben.setText("Angebot abgeben");
		btnVerkaufAngebotAbgeben.setActionCommand("Beschaffen");

		txtVerkaufMenge.setText("100");

		lblVerkaufStueckpreis_beschriftung.setText("Stückpreis:");

		txtVerkaufStueckpreis.setText("0.80");

		lblVerkaufGesamtpreis_Beschriftung.setText("Gesamtpreis:");

		org.jdesktop.layout.GroupLayout panVerkaufAngebotLayout = new org.jdesktop.layout.GroupLayout(
				panVerkaufAngebot);
		panVerkaufAngebot.setLayout(panVerkaufAngebotLayout);
		panVerkaufAngebotLayout
				.setHorizontalGroup(panVerkaufAngebotLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panVerkaufAngebotLayout.createSequentialGroup()
								.add(80, 80, 80)
								.add(lblVerkaufProdukt_beschriftung))
						.add(panVerkaufAngebotLayout
								.createSequentialGroup()
								.add(90, 90, 90)
								.add(lblVerkaufMenge_beschriftung)
								.add(4, 4, 4)
								.add(txtVerkaufMenge,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										40,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
						.add(panVerkaufAngebotLayout
								.createSequentialGroup()
								.add(70, 70, 70)
								.add(lblVerkaufStueckpreis_beschriftung)
								.add(7, 7, 7)
								.add(txtVerkaufStueckpreis,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										40,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
						.add(panVerkaufAngebotLayout.createSequentialGroup()
								.add(60, 60, 60)
								.add(lblVerkaufGesamtpreis_Beschriftung))
						.add(btnVerkaufAngebotAbgeben));
		panVerkaufAngebotLayout
				.setVerticalGroup(panVerkaufAngebotLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panVerkaufAngebotLayout
								.createSequentialGroup()
								.add(lblVerkaufProdukt_beschriftung)
								.add(3, 3, 3)
								.add(panVerkaufAngebotLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.BASELINE)
										.add(lblVerkaufMenge_beschriftung)
										.add(txtVerkaufMenge,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
								.add(3, 3, 3)
								.add(panVerkaufAngebotLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(lblVerkaufStueckpreis_beschriftung)
										.add(txtVerkaufStueckpreis,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
								.add(lblVerkaufGesamtpreis_Beschriftung)
								.add(6, 6, 6).add(btnVerkaufAngebotAbgeben)));

		tabVerkauf.add(panVerkaufAngebot, java.awt.BorderLayout.PAGE_END);

		tableVerkaufProd.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] { "Produktbezeichnung", "Menge", "ME" }) {
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.Double.class, java.lang.String.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		tableVerkaufProd.setCursor(new java.awt.Cursor(
				java.awt.Cursor.HAND_CURSOR));
		scrlVerkauf.setViewportView(tableVerkaufProd);

		tabVerkauf.add(scrlVerkauf, java.awt.BorderLayout.CENTER);

		tabsMain.addTab("Verkauf", tabVerkauf);

		tabLager.setLayout(new java.awt.BorderLayout());

		scrlLagerRohstoffe.setMinimumSize(new java.awt.Dimension(300, 23));

		tableLagerRohstoffe.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] { "Rohstoff", "Menge" }) {
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.Object.class };
			boolean[] canEdit = new boolean[] { false, true };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		scrlLagerRohstoffe.setViewportView(tableLagerRohstoffe);

		splitLager.setRightComponent(scrlLagerRohstoffe);

		scrlLagerFE.setMinimumSize(new java.awt.Dimension(300, 23));

		tableLagerFE.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] { "Fertigerzeugnis", "Menge" }) {
			boolean[] canEdit = new boolean[] { false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		scrlLagerFE.setViewportView(tableLagerFE);

		splitLager.setLeftComponent(scrlLagerFE);

		tabLager.add(splitLager, java.awt.BorderLayout.CENTER);

		tabsMain.addTab("Lager", tabLager);

		tabProduktion.setLayout(new java.awt.BorderLayout());

		tabProduktionMaschine.setLayout(new java.awt.BorderLayout());

		btnMaschineVerkaufen.setText("Maschine verkaufen");
		panProduktionMaschineButtons.add(btnMaschineVerkaufen);

		btnMaschineAnschaffen.setText("Maschine anschaffen");
		panProduktionMaschineButtons.add(btnMaschineAnschaffen);

		tabProduktionMaschine.add(panProduktionMaschineButtons,
				java.awt.BorderLayout.PAGE_END);

		tableProduktionMaschinen
				.setModel(new javax.swing.table.DefaultTableModel(
						new Object[][] {

						}, new String[] { "Maschine", "Ausbaustufe",
								"Anschaffungsrunde", "Abschreibedauer" }) {
					Class[] types = new Class[] { java.lang.Object.class,
							java.lang.Object.class, java.lang.Integer.class,
							java.lang.Integer.class };
					boolean[] canEdit = new boolean[] { false, true, false,
							false };

					public Class getColumnClass(int columnIndex) {
						return types[columnIndex];
					}

					public boolean isCellEditable(int rowIndex, int columnIndex) {
						return canEdit[columnIndex];
					}
				});
		scrlProduktionMaschine.setViewportView(tableProduktionMaschinen);

		tabProduktionMaschine.add(scrlProduktionMaschine,
				java.awt.BorderLayout.CENTER);

		tabsProduktion.addTab("Maschine", tabProduktionMaschine);

		panProduktionProduktionBorder.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Produzieren"));
		panProduktionProduktionBorder.setPreferredSize(new java.awt.Dimension(
				400, 200));

		lblProduktionMaschine_beschriftung.setText("Maschine:");

		lblProduktionRohstoff_beschriftung.setText("Rohstoff:");

		lblProduzierenMengeneinsatz_beschriftung.setText("Mengeneinsatz:");

		org.jdesktop.layout.GroupLayout panProduktionProduktionBorderLayout = new org.jdesktop.layout.GroupLayout(
				panProduktionProduktionBorder);
		panProduktionProduktionBorder
				.setLayout(panProduktionProduktionBorderLayout);
		panProduktionProduktionBorderLayout
				.setHorizontalGroup(panProduktionProduktionBorderLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panProduktionProduktionBorderLayout
								.createSequentialGroup()
								.add(panProduktionProduktionBorderLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(panProduktionProduktionBorderLayout
												.createSequentialGroup()
												.add(38, 38, 38)
												.add(panProduktionProduktionBorderLayout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.TRAILING)
														.add(lblProduktionRohstoff_beschriftung)
														.add(lblProduktionMaschine_beschriftung)))
										.add(panProduktionProduktionBorderLayout
												.createSequentialGroup()
												.addContainerGap()
												.add(lblProduzierenMengeneinsatz_beschriftung)))
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(panProduktionProduktionBorderLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING,
												false)
										.add(comboProduzierenMaschine,
												0,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.add(comboProduzierenRohstoff, 0, 85,
												Short.MAX_VALUE)
										.add(txtProduzierenMengeneinsatz))
								.addContainerGap(211, Short.MAX_VALUE)));
		panProduktionProduktionBorderLayout
				.setVerticalGroup(panProduktionProduktionBorderLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(panProduktionProduktionBorderLayout
								.createSequentialGroup()
								.add(panProduktionProduktionBorderLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.TRAILING)
										.add(panProduktionProduktionBorderLayout
												.createSequentialGroup()
												.add(panProduktionProduktionBorderLayout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(lblProduktionMaschine_beschriftung)
														.add(comboProduzierenMaschine,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
												.add(28, 28, 28))
										.add(panProduktionProduktionBorderLayout
												.createParallelGroup(
														org.jdesktop.layout.GroupLayout.BASELINE)
												.add(comboProduzierenRohstoff,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
												.add(lblProduktionRohstoff_beschriftung)))
								.add(panProduktionProduktionBorderLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.BASELINE)
										.add(txtProduzierenMengeneinsatz,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.add(lblProduzierenMengeneinsatz_beschriftung))
								.addContainerGap(
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));

		btnProduzieren.setText("Produzieren");

		org.jdesktop.layout.GroupLayout ProduzierenLayout = new org.jdesktop.layout.GroupLayout(
				Produzieren);
		Produzieren.setLayout(ProduzierenLayout);
		ProduzierenLayout
				.setHorizontalGroup(ProduzierenLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(ProduzierenLayout
								.createSequentialGroup()
								.addContainerGap()
								.add(ProduzierenLayout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING)
										.add(ProduzierenLayout
												.createSequentialGroup()
												.add(panProduktionProduktionBorder,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														398, Short.MAX_VALUE)
												.add(498, 498, 498))
										.add(ProduzierenLayout
												.createSequentialGroup()
												.add(btnProduzieren)
												.addContainerGap(
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)))));
		ProduzierenLayout.setVerticalGroup(ProduzierenLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(ProduzierenLayout
						.createSequentialGroup()
						.addContainerGap()
						.add(panProduktionProduktionBorder,
								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
								102,
								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(
								org.jdesktop.layout.LayoutStyle.RELATED)
						.add(btnProduzieren)
						.addContainerGap(392, Short.MAX_VALUE)));

		tabsProduktion.addTab("Produzieren", Produzieren);

		tabProduktion.add(tabsProduktion, java.awt.BorderLayout.CENTER);

		tabsMain.addTab("Produktion", tabProduktion);

		panInhalt.add(tabsMain, java.awt.BorderLayout.CENTER);

		getContentPane().add(panInhalt, java.awt.BorderLayout.CENTER);

		menuSpiel.setText("Spiel");

		beendenItem.setText("Beenden");
		beendenItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				beendenItemActionPerformed(evt);
			}
		});
		menuSpiel.add(beendenItem);

		menubar.add(menuSpiel);

		menuHilfe.setText("Hilfe");

		ueberItem.setText("Über");
		menuHilfe.add(ueberItem);

		menubar.add(menuHilfe);

		setJMenuBar(menubar);

		pack();
	}// </editor-fold>

	private void beendenItemActionPerformed(java.awt.event.ActionEvent evt) {
		beenden();
	}

	private void formWindowOpened(java.awt.event.WindowEvent evt) {
		fillToolbar();
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(RundenView.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(RundenView.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(RundenView.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(RundenView.class.getName()).log(
					java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new RundenView().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JPanel Produzieren;
	private javax.swing.JMenuItem beendenItem;
	private javax.swing.JButton btnEinkaufBeschaffungVornehmen;
	private javax.swing.JButton btnEinkaufEinstellen;
	private javax.swing.JButton btnEinkaufEntlassen;
	private javax.swing.JButton btnMaschineAnschaffen;
	private javax.swing.JButton btnMaschineVerkaufen;
	private javax.swing.JButton btnProduktionEinstellen;
	private javax.swing.JButton btnProduktionEntlassen1;
	private javax.swing.JButton btnProduzieren;
	private javax.swing.JButton btnRundeBeenden;
	private javax.swing.JButton btnVerkaufAngebotAbgeben;
	private javax.swing.JButton btnVerkaufEinstellen;
	private javax.swing.JButton btnVerkaufEntlassen;
	private javax.swing.JComboBox comboProduzierenMaschine;
	private javax.swing.JComboBox comboProduzierenRohstoff;
	private javax.swing.JLabel lblEinkaufGesamtPreis_beschriftung;
	private javax.swing.JLabel lblEinkaufMenge_beschriftung;
	private javax.swing.JLabel lblEinkaufProdukt;
	private javax.swing.JLabel lblEinkaufProdukt_beschriftung;
	private javax.swing.JLabel lblProduktionMaschine_beschriftung;
	private javax.swing.JLabel lblProduktionRohstoff_beschriftung;
	private javax.swing.JLabel lblProduzierenMengeneinsatz_beschriftung;
	private javax.swing.JLabel lblVerkaufGesamtpreis;
	private javax.swing.JLabel lblVerkaufGesamtpreis_Beschriftung;
	private javax.swing.JLabel lblVerkaufMenge_beschriftung;
	private javax.swing.JLabel lblVerkaufProdukt;
	private javax.swing.JLabel lblVerkaufProdukt_beschriftung;
	private javax.swing.JLabel lblVerkaufStueckpreis_beschriftung;
	private javax.swing.JLabel lvlEinkaufGesamtpreis;
	private javax.swing.JMenu menuHilfe;
	private javax.swing.JMenu menuSpiel;
	private javax.swing.JMenuBar menubar;
	private javax.swing.JPanel panEinkaufBeschaffung;
	private javax.swing.JPanel panInhalt;
	private javax.swing.JPanel panProduktionMaschineButtons;
	private javax.swing.JPanel panProduktionProduktionBorder;
	private javax.swing.JPanel panTabMitEinkaufButtons;
	private javax.swing.JPanel panTabMitProduktionButtons;
	private javax.swing.JPanel panTabMitVerkaufButtons;
	private javax.swing.JPanel panVerkaufAngebot;
	private javax.swing.JScrollPane scrlEinkauf;
	private javax.swing.JScrollPane scrlEinkaufMitarbeiter;
	private javax.swing.JScrollPane scrlLagerFE;
	private javax.swing.JScrollPane scrlLagerRohstoffe;
	private javax.swing.JScrollPane scrlProduktionMaschine;
	private javax.swing.JScrollPane scrlProduktionMitarbeiter;
	private javax.swing.JScrollPane scrlUebersichtBilanz;
	private javax.swing.JScrollPane scrlVerkauf;
	private javax.swing.JScrollPane scrlVerkaufMitarbeiter;
	private javax.swing.JSplitPane splitLager;
	private javax.swing.JPanel tabEinkauf;
	private javax.swing.JPanel tabLager;
	private javax.swing.JPanel tabMitEinkauf;
	private javax.swing.JPanel tabMitProduktion;
	private javax.swing.JPanel tabMitVerkauf;
	private javax.swing.JPanel tabMitarbeiter;
	private javax.swing.JPanel tabProduktion;
	private javax.swing.JPanel tabProduktionMaschine;
	private javax.swing.JPanel tabUebersicht;
	private javax.swing.JPanel tabVerkauf;
	private javax.swing.JTable tableEinkaufMitarbeiter;
	private javax.swing.JTable tableEinkaufProd;
	private javax.swing.JTable tableLagerFE;
	private javax.swing.JTable tableLagerRohstoffe;
	private javax.swing.JTable tableProduktionMaschinen;
	private javax.swing.JTable tableProduktionMitarbeiter;
	private javax.swing.JTable tableUebersichtBilanz;
	private javax.swing.JTable tableVerkaufMitarbeiter;
	private javax.swing.JTable tableVerkaufProd;
	private javax.swing.JTabbedPane tabsMain;
	private javax.swing.JTabbedPane tabsMitarbeiter;
	private javax.swing.JTabbedPane tabsProduktion;
	private javax.swing.JToolBar toolbarSpieler;
	private javax.swing.JTextField txtEinkaufMenge;
	private javax.swing.JTextField txtProduzierenMengeneinsatz;
	private javax.swing.JTextField txtVerkaufMenge;
	private javax.swing.JTextField txtVerkaufStueckpreis;
	private javax.swing.JMenuItem ueberItem;

	// End of variables declaration

	// CODE
	private void beenden() {
		int res = JOptionPane
				.showConfirmDialog(
						this,
						"Möchten Sie das Spiel wirklich beenden? Der gesamte Fortschritt der Unternehmen geht verloren!",
						"Achtung", JOptionPane.YES_NO_OPTION);
		if (res == JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}

	@Override
	public void valueChanged(ListSelectionEvent e) {
		Object src = e.getSource();

		lblVerkaufProdukt.setText(tableVerkaufProd.getModel()
				.getValueAt(tableVerkaufProd.getSelectedRow(), 0).toString());

		lblEinkaufProdukt.setText(tableEinkaufProd.getModel()
				.getValueAt(tableEinkaufProd.getSelectedRow(), 0).toString());

	}

	JToggleButton[] togglePlayer;

	private void fillToolbar() {
		int c = Spiel.getSpieler().size();
		togglePlayer = new JToggleButton[c];
		ButtonGroup bg = new ButtonGroup();
		for (int i = 0; i < c; i++) {
			togglePlayer[i] = new JToggleButton();
			togglePlayer[i].setText(Spiel.getSpieler().get(i).getName());
			togglePlayer[i].addActionListener(this);
			toolbarSpieler.add(togglePlayer[i]);

			bg.add(togglePlayer[i]);
		}
		togglePlayer[0].setSelected(true);
		loadPlayerData(0);

	}

	private int player = 0;

	private void loadPlayerData(int player) {
		loadBilanz(player);
		loadMitarbeiterReiter(player);
		player = Spiel.getAktuelleRunde().getAktuellerSpielerNr();
	}

	private void loadBilanz(int player) {
		DefaultTableModel mod = (DefaultTableModel) tableUebersichtBilanz
				.getModel();
		mod.setRowCount(0);

		Snapshot snap = Spiel.getSpieler().get(player).getUnternehmen()
				.getFinanzen().getBilanzSnapshot();
		mod.addRow(new Object[] { "TA/Masch", snap.getMaschinenkonto() + "",
				"EK", snap.getEKkonto() + "" });
		mod.addRow(new Object[] { "RS", snap.getRohstoffkonto() + "", "DA",
				snap.getDarlehenkonto() + "" });
		mod.addRow(new Object[] { "FE", snap.getFertigerzeugniskonto() + "",
				"", "" });
		mod.addRow(new Object[] { "BA", snap.getBankkonto() + "", "", "" });
		mod.addRow(new Object[] { "", "", "", "" });
		mod.addRow(new Object[] { "Bilanzsumme", snap.summeAktiva() + "",
				"Bilanzsumme", snap.summeAktiva() + "" });

		tableUebersichtBilanz.setModel(mod);
	}

	private void loadMitarbeiterReiter(int player) {
		DefaultTableModel ek = (DefaultTableModel) tableEinkaufMitarbeiter
				.getModel();
		ek.setRowCount(0);

		DefaultTableModel vk = (DefaultTableModel) tableVerkaufMitarbeiter
				.getModel();
		vk.setRowCount(0);

		DefaultTableModel prod = (DefaultTableModel) tableProduktionMitarbeiter
				.getModel();
		prod.setRowCount(0);

		Unternehmen un = Spiel.getSpieler().get(player).getUnternehmen();

		ArrayList<ArrayList<Mitarbeiter>> maUn = new ArrayList<ArrayList<Mitarbeiter>>();

		maUn.add(un.getEinkauf().getMitarbeiterListe());
		maUn.add(un.getVerkauf().getMitarbeiterListe());
		maUn.add(un.getProduktion().getMitarbeiterListe());

		try {
			for (int i = 0; i < maUn.get(0).size(); i++) {
				Vertrieb v = (Vertrieb) maUn.get(0).get(i);
				ek.addRow(new Object[] { v.getName(),
						v.getClass().getSimpleName(), v.getStufe() });
			}
			for (int i = 0; i < maUn.get(1).size(); i++) {
				Vertrieb e = (Vertrieb) maUn.get(1).get(i);
				ek.addRow(new Object[] { e.getName(),
						e.getClass().getSimpleName(), e.getStufe() });
			}
			for (int i = 0; i < maUn.get(2).size(); i++) {
				Produktionsmitarbeiter p = (Produktionsmitarbeiter) maUn.get(2)
						.get(i);
				ek.addRow(new Object[] { p.getName(),
						p.getClass().getSimpleName(), p.getStufe() });
			}
		} catch (Exception e) {
			// TODO: handle exception
		}

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object src = e.getSource();

		if (src.equals(togglePlayer[0])) {
			loadPlayerData(0);
			return;
		}
		if (src.equals(togglePlayer[1])) {
			loadPlayerData(1);
			return;
		}
		if (src.equals(togglePlayer[2])) {
			loadPlayerData(2);
			return;
		}
		if (src.equals(togglePlayer[3])) {
			loadPlayerData(3);
			return;
		}
		if (src.equals(togglePlayer[4])) {
			loadPlayerData(4);
			return;
		}
		if (src.equals(btnEinkaufBeschaffungVornehmen)) {
			Spiel.getSpieler()
					.get(Spiel.getAktuelleRunde().getAktuellerSpielerNr())
					.getUnternehmen()
					.getEinkauf()
					.einkaufenRohstoffe(
							Integer.parseInt(txtEinkaufMenge.getText()));
			loadPlayerData(player);
			return;
		}

	}

}
